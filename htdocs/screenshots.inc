These screenshots use the <a
href="http://vim.sourceforge.net/script.php?script_id=271">navajo-night</a>
colorscheme by Matthew Hawkins.
<ul>
<li><a href="screenshots/template-menu.png">A new .tex file has been opened</a>
This screenshot shows the menus which get loaded up automatically when a
new .tex file is opened in gvim. The "TeX-Suite &gt; Templates" item
contains a list of templates found in the templates/ directory. You can
choose one of this to start off your work. You can place your own custom
template files also in the templates/ directory.<p></p></li>
<li><a href="screenshots/after-template.png">The template generated</a> The
template generated by tex-suite from the "TeX-Suite &gt; Templates &gt;
article" option. Note how we allow for dynamic elements such as the current
date to go in the template file. Note also that the cursor is placed
automatically where it is shown here.<p></p></li>
<li><a href="screenshots/formula-tex.png">We enter a formula</a> This
screenshot shows what happens after we type <tt>EEQ</tt>. This is one of the
numerous "macros" which tex-suite provides. Note the automatic placement of
the cursor and additionally the <tt>«»</tt> characters. These are called
"placeholders". Pressing CTRL-J in insert mode automatically takes you to
the next placeholder. This simplifies the task of moving around.
<p></p></li>
<li><a href="screenshots/formula-typing.png">Typing in a formula</a> We type in the
formula using other macros. For example typing <tt>^^</tt> results in
<tt>^{|}«»</tt> with the cursor placed at <tt>|</tt>.<p></p></li>
<li><a href="screenshots/compilation-error.png">Compiler</a> Tex-suite also
comes with a customizable compiler plugin. When you press <tt>\ll</tt> in
normal mode, tex-suite calls the tex compiler, and reports any errors in a
<tt>cwindow</tt>, where you can go to the corresponding errors. You can
customize the compiler to ignore common warnings. By default most of the
messages which a typical tex compiler spits out are not shown. It can
of course be told to show everything which the tex compiler spits out.
Note that the error shown here can be corrected by choosing the math
portion visually and pressing <tt>\(</tt> in visual mode. This
encloses the selected portion in <tt>$$</tt>.
<p></p></li>
<li><a href="screenshots/folding.png">Folding</a> Next time we open up the
tex file (or if we force a fold refresh by typing <tt>\rf</tt> in normal
mode), the file is shown "folded" for easy navigation within the file.  The
folds are manual so they don't interfere with typing as much as syntax
folds do. Tex-suite folds footnotes, tables, figures, equations, sections
(and subsections), chapters and slides. The folds are nested if necessary.
It is quite trivial to add new items.<p></p></li>
<li><a href="screenshots/starting-packages.png">Packages</a>One of the most
powerful features of latex suite is its <a
href="download/latex-suite.html#latex-packages">support for custom
packages.</a>. This screenshot shows the user using the supported
<tt>SIunits</tt> package. Doing this inserts a line such as
<p><tt>\usepackage[«»]«»{SIunits}«»</tt></p>
with the cursor left on the first placeholder.
<li><a href="screenshots/after-packages.png">After adding a package</a>
This screenshot shows the menu items created when tex-suite "supports" a
package. The menu contains the various environments, commands, options etc
specified in the package file<p></p></li>.
</ul>
<!--
vim:ft=php
-->
